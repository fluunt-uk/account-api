# This file is a template, and might need editing before it works on your project.
image: golang:1.13

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/ProjectReferral/account-api

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME


stages:
  - build
  - production 

build:
  stage: build
  script:
    - cd $CI_PROJECT_DIR
    - ls
    - git config --global url."https://projectreferral:n9ASa89aeZ7JLswBc5Do@gitlab.com".insteadOf "https://gitlab.com"
    - go mod tidy
    - go build $CI_PROJECT_DIR/cmd/main.go

deploy:
    stage: production
    only:
        - master  # Run this job only on changes for the master branch
    before_script:
    # generate ssh key
    - mkdir -p ~/.ssj
    - echo -e "PROD_DEPLOY_SERVER"
    - chmond 600 ~/.ssh/id_rsa
    - ‘[[ -f /.dockerenv ]] && echo -e “Host *\n\tStrictHostKeyChecking no\n\n” > ~/.ssh/config’

    script:
     - bash  .gitlab-deploy-prod.sh

    # environment:
    # name: production
    # url: http://ec2-35-179-11-178.eu-west-2.compute.amazonaws.com

    when: manual
    
